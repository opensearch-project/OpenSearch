/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * The OpenSearch Contributors require contributions made to
 * this file be licensed under the Apache-2.0 license or a
 * compatible open source license.
 *
 * Modifications Copyright OpenSearch Contributors. See
 * GitHub history for details.
 */

/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */


import org.opensearch.gradle.MavenFilteringHack
import org.opensearch.gradle.info.BuildParams
import org.opensearch.gradle.test.AntFixture

import static org.opensearch.gradle.PropertyNormalization.IGNORE_VALUE

apply plugin: 'opensearch.yaml-rest-test'

final int gceNumberOfNodes = 3

dependencies {
  yamlRestTestImplementation project(':plugins:discovery-gce')
}

restResources {
  restApi {
    includeCore '_common', 'cluster', 'nodes'
  }
}

/** A task to start the GCEFixture which emulates a GCE service **/
task gceFixture(type: AntFixture) {
  dependsOn sourceSets.yamlRestTest.runtimeClasspath
  env 'CLASSPATH', "${-> sourceSets.yamlRestTest.runtimeClasspath.asPath}"
  executable = "${BuildParams.runtimeJavaHome}/bin/java"
  args 'org.opensearch.cloud.gce.GCEFixture', baseDir, "${buildDir}/testclusters/yamlRestTest-1/config/unicast_hosts.txt"
}

Map<String, Object> expansions = [
  'expected_nodes': gceNumberOfNodes
]

tasks.named("processYamlRestTestResources").configure {
  inputs.properties(expansions)
  MavenFilteringHack.filter(it, expansions)
}

yamlRestTest {
  dependsOn gceFixture
}

testClusters.yamlRestTest {
  numberOfNodes = gceNumberOfNodes
  plugin ':plugins:discovery-gce'
  // use gce fixture for Auth calls instead of http://metadata.google.internal
  environment 'GCE_METADATA_HOST', { "http://${gceFixture.addressAndPort}" }, IGNORE_VALUE
  // allows to configure hidden settings (`cloud.gce.host` and `cloud.gce.root_url`)
  systemProperty 'opensearch.allow_reroute_gce_settings', 'true'

  setting 'discovery.seed_providers', 'gce'
  // use gce fixture for metadata server calls instead of http://metadata.google.internal
  setting 'cloud.gce.host', { "http://${gceFixture.addressAndPort}" }, IGNORE_VALUE
  // use gce fixture for API calls instead of https://www.googleapis.com
  setting 'cloud.gce.root_url', { "http://${gceFixture.addressAndPort}" }, IGNORE_VALUE
}
