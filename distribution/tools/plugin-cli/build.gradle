/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * The OpenSearch Contributors require contributions made to
 * this file be licensed under the Apache-2.0 license or a
 * compatible open source license.
 *
 * Modifications Copyright OpenSearch Contributors. See
 * GitHub history for details.
 */

/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

apply plugin: 'opensearch.build'

base {
  archivesName = 'opensearch-plugin-cli'
}

dependencies {
  compileOnly project(":server")
  compileOnly project(":libs:opensearch-cli")
  api "org.bouncycastle:bcpg-fips:2.0.9"
  api "org.bouncycastle:bc-fips:2.0.0"
  testImplementation project(":test:framework")
  testImplementation 'com.google.jimfs:jimfs:1.3.0'
  testRuntimeOnly("com.google.guava:guava:${versions.guava}") {
    transitive = false
  }
  api "commons-io:commons-io:${versions.commonsio}"
  implementation "org.apache.commons:commons-compress:${versions.commonscompress}"
}

tasks.named("dependencyLicenses").configure {
  mapping from: /bc.*/, to: 'bouncycastle'
}

test {
  // TODO: find a way to add permissions for the tests in this module
  systemProperty 'tests.security.manager', 'false'
  jvmArgs += [ "-Djava.security.egd=file:/dev/urandom" ]
}

thirdPartyAudit.ignoreMissingClasses(
  'org.brotli.dec.BrotliInputStream',
  'org.objectweb.asm.AnnotationVisitor',
  'org.objectweb.asm.Attribute',
  'org.objectweb.asm.ClassReader',
  'org.objectweb.asm.ClassVisitor',
  'org.objectweb.asm.FieldVisitor',
  'org.objectweb.asm.Label',
  'org.objectweb.asm.MethodVisitor',
  'org.objectweb.asm.Type',
  'org.tukaani.xz.DeltaOptions',
  'org.tukaani.xz.FilterOptions',
  'org.tukaani.xz.LZMA2InputStream',
  'org.tukaani.xz.LZMA2Options',
  'org.tukaani.xz.LZMAInputStream',
  'org.tukaani.xz.LZMAOutputStream',
  'org.tukaani.xz.MemoryLimitException',
  'org.tukaani.xz.UnsupportedOptionsException',
  'org.tukaani.xz.XZ',
  'org.tukaani.xz.XZOutputStream',
  'org.apache.commons.codec.digest.PureJavaCrc32C',
  'org.apache.commons.codec.digest.XXHash32',
  'org.apache.commons.lang3.reflect.FieldUtils'
)
