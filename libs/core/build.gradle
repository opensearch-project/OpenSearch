/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * The OpenSearch Contributors require contributions made to
 * this file be licensed under the Apache-2.0 license or a
 * compatible open source license.
 *
 * Modifications Copyright OpenSearch Contributors. See
 * GitHub history for details.
 */

/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import org.opensearch.gradle.info.BuildParams

apply plugin: 'opensearch.publish'

base {
  archivesName = 'opensearch-core'
}

dependencies {
  api project(':libs:opensearch-common')

  api "com.fasterxml.jackson.core:jackson-core:${versions.jackson}"

  // lucene
  api "org.apache.lucene:lucene-core:${versions.lucene}"

  // logging
  api "org.apache.logging.log4j:log4j-api:${versions.log4j}"

  testImplementation "com.carrotsearch.randomizedtesting:randomizedtesting-runner:${versions.randomizedrunner}"
  testImplementation "junit:junit:${versions.junit}"
  testImplementation "org.hamcrest:hamcrest:${versions.hamcrest}"

  testImplementation(project(":test:framework")) {
    exclude group: 'org.opensearch', module: 'opensearch-core'
  }
}

tasks.named('forbiddenApisMain').configure {
  // :libs:opensearch-core does not depend on server
  // TODO: Need to decide how we want to handle for forbidden signatures with the changes to server
  replaceSignatureFiles 'jdk-signatures'
}

tasks.named("thirdPartyAudit").configure {
  ignoreMissingClasses(
    // from log4j
    *[
      'jdk.incubator.vector.ByteVector',
      'jdk.incubator.vector.DoubleVector',
      'jdk.incubator.vector.FloatVector',
      'jdk.incubator.vector.IntVector',
      'jdk.incubator.vector.LongVector',
      'jdk.incubator.vector.ShortVector',
      'jdk.incubator.vector.Vector',
      'jdk.incubator.vector.VectorMask',
      'jdk.incubator.vector.VectorOperators',
      'jdk.incubator.vector.VectorShape',
      'jdk.incubator.vector.VectorSpecies',
      'org.osgi.framework.Bundle',
      'org.osgi.framework.BundleActivator',
      'org.osgi.framework.BundleContext',
      'org.osgi.framework.BundleEvent',
      'org.osgi.framework.FrameworkUtil',
      'org.osgi.framework.ServiceReference',
      'org.osgi.framework.ServiceRegistration',
      'org.osgi.framework.SynchronousBundleListener',
      'org.osgi.framework.wiring.BundleWire',
      'org.osgi.framework.wiring.BundleWiring',
    ]
  )
}

tasks.named("dependencyLicenses").configure {
  mapping from: /jackson-.*/, to: 'jackson'
  mapping from: /lucene-.*/, to: 'lucene'
}
