setup:
  - do:
      indices.create:
        index: test_1
        body:
          mappings:
            properties:
              foo:
                type: keyword

  - do:
      bulk:
        refresh: true
        body:
          - index:
              _index: test_1
          - foo: bar
          - index:
              _index: test_1
          - foo: bar

  - do:
      indices.refresh:
        index: [test_1]

---
teardown:
  - do:
      indices.delete:
        index: test_1

# related issue: https://github.com/opensearch-project/OpenSearch/issues/18714
---
"Test max score with sorting on score firstly":
  - skip:
      version: " - 3.2.0"
      reason: Fixed in 3.2.0

  - do:
      search:
        index: test_1
        body:
          query: { term: { foo: bar} }
          sort: [{ _score: desc }, { _doc: desc }]
  - match: { hits.total: 2 }
  - length: { hits.hits: 2 }
  - match: { max_score: 1.0 }

  - do:
      search:
        index: test_1
        body:
          query: { term: { foo: bar} }
          sort: [{ _score: asc }, { _doc: desc }]
  - match: { hits.total: 2 }
  - length: { hits.hits: 2 }
  - match: { max_score: null }

---
"Test max score with sorting on score firstly with concurrent segment search enabled":
  - skip:
      version: " - 3.2.0"
      reason: Fixed in 3.2.0

  - do:
      indices.put_settings:
        index: test_1
        body:
          index.search.concurrent_segment_search.mode: 'all'

  - do:
      search:
        index: test_1
        body:
          query: { term: { foo: bar} }
          sort: [{ _score: desc }, { _doc: desc }]
  - match: { hits.total: 2 }
  - length: { hits.hits: 2 }
  - match: { max_score: 1.0 }

  - do:
      search:
        index: test_1
        body:
          query: { term: { foo: bar} }
          sort: [{ _score: asc }, { _doc: desc }]
  - match: { hits.total: 2 }
  - length: { hits.hits: 2 }
  - match: { max_score: null }
