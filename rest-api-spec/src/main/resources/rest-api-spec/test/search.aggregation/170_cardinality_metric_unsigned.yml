setup:
  - skip:
      version: " - 2.7.99"
      reason: unsigned_long is not supported before 2.8.0

  - do:
      indices.create:
          index: test_1
          body:
            settings:
              number_of_replicas: 0
            mappings:
              properties:
                unsigned_field:
                   type : unsigned_long
                double_field:
                   type : double
                string_field:
                   type: keyword

  - do:
       bulk:
         refresh: true
         body:
           - index:
               _index: test_1
               _id:    1
           - unsigned_field: 1
             double_field: 1.0
             string_field: foo
           - index:
               _index: test_1
               _id:    2
           - unsigned_field: 51
             double_field: 51.0
             string_field: foo
           - index:
               _index: test_1
               _id:    3
           - unsigned_field: 1101
             double_field: 1101.0
             string_field: foo
           - index:
               _index: test_1
               _id:    4
           - unsigned_field: 10223372036854778000
             double_field: 10223372036854778000.0
             string_field: foo

---
"Basic test":

  - do:
      search:
        rest_total_hits_as_int: true
        body:
          aggs:
            distinct_unsigned:
              cardinality:
                field: unsigned_field
            distinct_double:
              cardinality:
                field: double_field
            distinct_string:
              cardinality:
                field: string_field

  - match: { hits.total: 4 }
  - length: { hits.hits: 4 }
  - match: { aggregations.distinct_unsigned.value: 4 }
  - match: { aggregations.distinct_double.value: 4 }
  - match: { aggregations.distinct_string.value: 1 }

  - do:
      search:
        rest_total_hits_as_int: true
        body:
          aggs:
            distinct_unsigned:
              cardinality:
                field: unsigned_field
                precision_threshold: 100
            distinct_double:
              cardinality:
                field: double_field
                precision_threshold: 100
            distinct_string:
              cardinality:
                field: string_field
                precision_threshold: 100

  - match: { hits.total: 4 }
  - length: { hits.hits: 4 }
  - match: { aggregations.distinct_unsigned.value: 4 }
  - match: { aggregations.distinct_double.value: 4 }
  - match: { aggregations.distinct_string.value: 1 }

---
"Only aggs test":

  - do:
      search:
        rest_total_hits_as_int: true
        body:
          size: 0
          aggs:
            distinct_unsigned:
              cardinality:
                field: unsigned_field
            distinct_double:
              cardinality:
                field: double_field
            distinct_string:
              cardinality:
                field: string_field

  - match: { hits.total: 4 }
  - length: { hits.hits: 0 }
  - match: { aggregations.distinct_unsigned.value: 4 }
  - match: { aggregations.distinct_double.value: 4 }
  - match: { aggregations.distinct_string.value: 1 }

---
"Filtered test":

  - do:
      search:
        rest_total_hits_as_int: true
        body:
          query:
            constant_score:
              filter:
                range:
                  unsigned_field:
                    gte: 50
          aggs:
            distinct_unsigned:
              cardinality:
                field: unsigned_field
            distinct_double:
              cardinality:
                field: double_field
            distinct_string:
              cardinality:
                field: string_field

  - match: { hits.total: 3 }
  - length: { hits.hits: 3 }
  - match: { aggregations.distinct_unsigned.value: 3 }
  - match: { aggregations.distinct_double.value: 3 }
  - match: { aggregations.distinct_string.value: 1 }


---
"Missing field with missing param":

  - do:
      search:
        rest_total_hits_as_int: true
        body:
          aggs:
            distinct_missing:
              cardinality:
                field: missing_field
                missing: "foo"

  - match: { hits.total: 4 }
  - length: { hits.hits: 4 }
  - match: { aggregations.distinct_missing.value: 1 }

---
"Missing field without missing param":

  - do:
      search:
        rest_total_hits_as_int: true
        body:
          aggs:
            distinct_missing:
              cardinality:
                field: missing_field

  - match: { hits.total: 4 }
  - length: { hits.hits: 4 }
  - is_false: aggregations.distinct_missing.value

---
"Metadata test":

  - do:
      search:
        rest_total_hits_as_int: true
        body:
          aggs:
            distinct_missing:
              meta:
                foo: bar
              cardinality:
                field: unsigned_field

  - match: { hits.total: 4 }
  - length: { hits.hits: 4 }
  - match: { aggregations.distinct_missing.value: 4 }
  - match: { aggregations.distinct_missing.meta.foo: "bar" }

---
"Invalid Precision test":

  - do:
      catch: /\[precisionThreshold\] must be greater than or equal to 0. Found \[-1\] in \[distinct_unsigned\]/
      search:
        rest_total_hits_as_int: true
        body:
          aggs:
            distinct_unsigned:
              cardinality:
                field: unsigned_field
                precision_threshold: -1

---
"profiler unsigned_long":
  - do:
      search:
        body:
          profile: true
          size: 0
          aggs:
            distinct_unsigned:
              cardinality:
                field: unsigned_field
  - match: { aggregations.distinct_unsigned.value: 4 }
  - gt: { profile.shards.0.aggregations.0.breakdown.initialize: 0 }
  - gt: { profile.shards.0.aggregations.0.breakdown.build_leaf_collector: 0 }
  - gt: { profile.shards.0.aggregations.0.breakdown.collect: 0 }
  - gt: { profile.shards.0.aggregations.0.breakdown.build_aggregation: 0 }
  - gt: { profile.shards.0.aggregations.0.breakdown.post_collection: 0 }
  - match: { profile.shards.0.aggregations.0.debug.empty_collectors_used: 0 }
  - gt: { profile.shards.0.aggregations.0.debug.numeric_collectors_used: 0 }
  - match: { profile.shards.0.aggregations.0.debug.ordinals_collectors_used: 0 }
  - match: { profile.shards.0.aggregations.0.debug.ordinals_collectors_overhead_too_high: 0 }
  - match: { profile.shards.0.aggregations.0.debug.string_hashing_collectors_used: 0 }

---
"profiler double":
  - do:
      search:
        body:
          profile: true
          size: 0
          aggs:
            distinct_double:
              cardinality:
                field: double_field
  - match: { aggregations.distinct_double.value: 4 }
  - gt: { profile.shards.0.aggregations.0.breakdown.initialize: 0 }
  - gt: { profile.shards.0.aggregations.0.breakdown.build_leaf_collector: 0 }
  - gt: { profile.shards.0.aggregations.0.breakdown.collect: 0 }
  - gt: { profile.shards.0.aggregations.0.breakdown.build_aggregation: 0 }
  - gt: { profile.shards.0.aggregations.0.breakdown.post_collection: 0 }
  - match: { profile.shards.0.aggregations.0.debug.empty_collectors_used: 0 }
  - gt: { profile.shards.0.aggregations.0.debug.numeric_collectors_used: 0 }
  - match: { profile.shards.0.aggregations.0.debug.ordinals_collectors_used: 0 }
  - match: { profile.shards.0.aggregations.0.debug.ordinals_collectors_overhead_too_high: 0 }
  - match: { profile.shards.0.aggregations.0.debug.string_hashing_collectors_used: 0 }

---
"profiler string":
  - skip:
      version: " - 3.3.99"
      reason:  hybrid collector added in 3.4.0
  - do:
      search:
        body:
          profile: true
          size: 0
          aggs:
            distinct_string:
              cardinality:
                field: string_field
  - match: { aggregations.distinct_string.value: 1 }
  - gt: { profile.shards.0.aggregations.0.breakdown.initialize: 0 }
  - gt: { profile.shards.0.aggregations.0.breakdown.build_leaf_collector: 0 }
  - gt: { profile.shards.0.aggregations.0.breakdown.collect: 0 }
  - gt: { profile.shards.0.aggregations.0.breakdown.build_aggregation: 0 }
  - gt: { profile.shards.0.aggregations.0.breakdown.post_collection: 0 }
  - match: { profile.shards.0.aggregations.0.debug.empty_collectors_used: 0 }
  - match: { profile.shards.0.aggregations.0.debug.numeric_collectors_used: 0 }
  - match: { profile.shards.0.aggregations.0.debug.ordinals_collectors_used: 0 }
  - match: { profile.shards.0.aggregations.0.debug.ordinals_collectors_overhead_too_high: 0 }
  - match: { profile.shards.0.aggregations.0.debug.string_hashing_collectors_used: 0 }
  - gt: { profile.shards.0.aggregations.0.debug.hybrid_collectors_used: 0 }
