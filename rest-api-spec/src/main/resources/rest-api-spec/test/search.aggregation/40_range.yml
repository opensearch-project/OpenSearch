setup:
  - do:
      indices.create:
          index: test
          body:
            settings:
              number_of_replicas: 0
            mappings:
              properties:
                ip:
                   type: ip
                double:
                  type: double
                date:
                  type: date
                  format: epoch_second
                scaled_field:
                  type: scaled_float
                  scaling_factor: 100

  - do:
      cluster.health:
        wait_for_status: green

---
"Double range":
  - do:
      index:
        index: test
        id: 1
        body: { "double" : 42 }

  - do:
      index:
        index: test
        id: 2
        body: { "double" : 100 }

  - do:
      index:
        index: test
        id: 3
        body: { "double" : 50 }

  - do:
      indices.refresh: {}

  - do:
      search:
        rest_total_hits_as_int: true
        body: { "size" : 0, "aggs" : { "double_range" : { "range" : { "field" : "double", "ranges": [ { "to": 50 }, { "from": 50, "to": 150 }, { "from": 150 } ] } } } }

  - match: { hits.total: 3 }

  - length: { aggregations.double_range.buckets: 3 }

  - match: { aggregations.double_range.buckets.0.key: "*-50.0" }

  - is_false: aggregations.double_range.buckets.0.from

  - match: { aggregations.double_range.buckets.0.to: 50.0 }

  - match: { aggregations.double_range.buckets.0.doc_count: 1 }

  - match: { aggregations.double_range.buckets.1.key: "50.0-150.0" }

  - match: { aggregations.double_range.buckets.1.from: 50.0 }

  - match: { aggregations.double_range.buckets.1.to: 150.0 }

  - match: { aggregations.double_range.buckets.1.doc_count: 2 }

  - match: { aggregations.double_range.buckets.2.key: "150.0-*" }

  - match: { aggregations.double_range.buckets.2.from: 150.0 }

  - is_false:  aggregations.double_range.buckets.2.to

  - match: { aggregations.double_range.buckets.2.doc_count: 0 }

  - do:
      search:
        rest_total_hits_as_int: true
        body: { "size" : 0, "aggs" : { "double_range" : { "range" : { "field" : "double", "ranges": [ { "from": null, "to": 50 }, { "from": 50, "to": 150 }, { "from": 150, "to": null } ] } } } }

  - match: { hits.total: 3 }

  - length: { aggregations.double_range.buckets: 3 }

  - match: { aggregations.double_range.buckets.0.key: "*-50.0" }

  - is_false: aggregations.double_range.buckets.0.from

  - match: { aggregations.double_range.buckets.0.to: 50.0 }

  - match: { aggregations.double_range.buckets.0.doc_count: 1 }

  - match: { aggregations.double_range.buckets.1.key: "50.0-150.0" }

  - match: { aggregations.double_range.buckets.1.from: 50.0 }

  - match: { aggregations.double_range.buckets.1.to: 150.0 }

  - match: { aggregations.double_range.buckets.1.doc_count: 2 }

  - match: { aggregations.double_range.buckets.2.key: "150.0-*" }

  - match: { aggregations.double_range.buckets.2.from: 150.0 }

  - is_false:  aggregations.double_range.buckets.2.to

  - match: { aggregations.double_range.buckets.2.doc_count: 0 }

---
"IP range":
  - do:
      index:
        index: test
        id: 1
        body: { "ip" : "::1" }

  - do:
      index:
        index: test
        id: 2
        body: { "ip" : "192.168.0.1" }

  - do:
      index:
        index: test
        id: 3
        body: { "ip" : "192.168.0.7" }

  - do:
      indices.refresh: {}

  - do:
      search:
        rest_total_hits_as_int: true
        body: { "size" : 0, "aggs" : { "ip_range" : { "ip_range" : { "field" : "ip", "ranges": [ { "to": "192.168.0.0" }, { "from": "192.168.0.0", "to": "192.169.0.0" }, { "from": "192.169.0.0" } ] } } } }

  - match: { hits.total: 3 }

  - length: { aggregations.ip_range.buckets: 3 }

  - is_false: aggregations.ip_range.buckets.0.from

  - match: { aggregations.ip_range.buckets.0.to: "192.168.0.0" }

  - match: { aggregations.ip_range.buckets.0.doc_count: 1 }

  - match: { aggregations.ip_range.buckets.1.from: "192.168.0.0" }

  - match: { aggregations.ip_range.buckets.1.to: "192.169.0.0" }

  - match: { aggregations.ip_range.buckets.1.doc_count: 2 }

  - match: { aggregations.ip_range.buckets.2.from: "192.169.0.0" }

  - is_false:  aggregations.ip_range.buckets.2.to

  - match: { aggregations.ip_range.buckets.2.doc_count: 0 }

  - do:
      search:
        rest_total_hits_as_int: true
        body: { "size" : 0, "aggs" : { "ip_range" : { "ip_range" : { "field" : "ip", "ranges": [ { "from": null, "to": "192.168.0.0" }, { "from": "192.168.0.0", "to": "192.169.0.0" }, { "from": "192.169.0.0", "to": null } ] } } } }

  - match: { hits.total: 3 }

  - length: { aggregations.ip_range.buckets: 3 }

  - is_false: aggregations.ip_range.buckets.0.from

  - match: { aggregations.ip_range.buckets.0.to: "192.168.0.0" }

  - match: { aggregations.ip_range.buckets.0.doc_count: 1 }

  - match: { aggregations.ip_range.buckets.1.from: "192.168.0.0" }

  - match: { aggregations.ip_range.buckets.1.to: "192.169.0.0" }

  - match: { aggregations.ip_range.buckets.1.doc_count: 2 }

  - match: { aggregations.ip_range.buckets.2.from: "192.169.0.0" }

  - is_false:  aggregations.ip_range.buckets.2.to

  - match: { aggregations.ip_range.buckets.2.doc_count: 0 }

  - do:
      search:
        rest_total_hits_as_int: true
        body: { "size" : 0, "aggs" : { "ip_range" : { "ip_range" : { "field" : "ip", "ranges": [ { "mask": "::/24" }, { "mask": "192.168.0.0/16" } ] } } } }

  - match: { hits.total: 3 }

  - length: { aggregations.ip_range.buckets: 2 }

  - match: { aggregations.ip_range.buckets.0.key: "::/24" }

  - match: { aggregations.ip_range.buckets.0.to: "0:100::" }

  - match: { aggregations.ip_range.buckets.0.doc_count: 3 }

  - match: { aggregations.ip_range.buckets.1.key: "192.168.0.0/16" }

  - match: { aggregations.ip_range.buckets.1.from: "192.168.0.0" }

  - match: { aggregations.ip_range.buckets.1.to: "192.169.0.0" }

  - match: { aggregations.ip_range.buckets.1.doc_count: 2 }

---
"IP Range Key Generation":
  - skip:
     version: " - 6.3.99"
     reason: "Before 6.4.0, ip_range did not always generate bucket keys (see #21045)."

  - do:
      search:
        rest_total_hits_as_int: true
        body: { "size" : 0, "aggs" : { "ip_range" : { "ip_range" : { "field" : "ip", "ranges": [ { "to": "192.168.0.0" }, { "from": "192.168.0.0", "to": "192.169.0.0" }, { "from": "192.169.0.0" } ] } } } }

  - length: { aggregations.ip_range.buckets: 3 }
  - match: { aggregations.ip_range.buckets.0.key: "*-192.168.0.0" }
  - match: { aggregations.ip_range.buckets.1.key: "192.168.0.0-192.169.0.0" }
  - match: { aggregations.ip_range.buckets.2.key: "192.169.0.0-*" }

---
"IP Range avg_bucket":
  - skip:
      version: " - 7.7.99"
      reason: Fixed in 7.8.0
  - do:
      bulk:
        refresh: true
        index: test
        body:
            - '{"index": {}}'
            - '{"ip": "::1", "v": 1}'
            - '{"index": {}}'
            - '{"ip": "192.168.0.1", "v": 2}'
            - '{"index": {}}'
            - '{"ip": "192.168.0.7", "v": 3}'

  - do:
      search:
        index: test
        body:
          size: 0
          aggs:
            range:
              ip_range:
                field: ip
                ranges:
                  - to: 192.168.0.0
                  - from: 192.168.0.0
                    to: 192.169.0.0
                  - from: 192.169.0.0
              aggs:
                v:
                  sum:
                    field: v
            range_avg_v:
              avg_bucket:
                buckets_path: range.v

  - match: { hits.total.value: 3 }
  - length: { aggregations.range.buckets: 3 }
  - match: { aggregations.range.buckets.0.key: "*-192.168.0.0" }
  - match: { aggregations.range.buckets.0.doc_count: 1 }
  - match: { aggregations.range.buckets.0.v.value: 1 }
  - match: { aggregations.range.buckets.1.key: "192.168.0.0-192.169.0.0" }
  - match: { aggregations.range.buckets.1.doc_count: 2 }
  - match: { aggregations.range.buckets.1.v.value: 5 }
  - match: { aggregations.range.buckets.2.key: "192.169.0.0-*" }
  - match: { aggregations.range.buckets.2.doc_count: 0 }
  - match: { aggregations.range.buckets.2.v.value: 0 }
  - match: { aggregations.range_avg_v.value: 3 }

---
"Date range":
  - do:
      index:
        index: test
        id: 1
        body: { "date" : 1000 }

  - do:
      index:
        index: test
        id: 2
        body: { "date" : 2000 }

  - do:
      index:
        index: test
        id: 3
        body: { "date" : 3000 }

  - do:
      indices.refresh: {}

  - do:
      search:
        rest_total_hits_as_int: true
        body: { "size" : 0, "aggs" : { "date_range" : { "date_range" : { "field" : "date", "ranges": [ { "from" : 1000, "to": 3000 }, { "from": 3000, "to": 4000 } ] } } } }

  - match: { hits.total: 3 }

  - length: { aggregations.date_range.buckets: 2 }

  - match: { aggregations.date_range.buckets.0.doc_count: 2 }
  - match: { aggregations.date_range.buckets.0.key: "1000-3000" }
  - match: { aggregations.date_range.buckets.0.from: 1000000 }
  - match: { aggregations.date_range.buckets.0.to: 3000000 }

  - match: { aggregations.date_range.buckets.1.doc_count: 1 }
  - match: { aggregations.date_range.buckets.1.key: "3000-4000" }
  - match: { aggregations.date_range.buckets.1.from: 3000000 }
  - match: { aggregations.date_range.buckets.1.to: 4000000 }

---
"Date Range Missing":
  - do:
      index:
        index: test
        id: 1
        body: { "date" : "28800000000" }

  - do:
      index:
        index: test
        id: 2
        body: { "date" : "315561600000" }

  - do:
      index:
        index: test
        id: 3
        body: { "date" : "631180800000" }

  - do:
      index:
        index: test
        id: 4
        body: { "date" : "10000" }

  - do:
        index:
          index: test
          id: 5
          body: { "ip" : "192.168.0.1" }

  - do:
      indices.refresh: {}

  - do:
      search:
        rest_total_hits_as_int: true
        body:
          aggs:
            age_groups:
              date_range:
                field: date
                missing: "0"
                ranges:
                - key: Generation Y
                  from: '315561600000'
                  to: '946713600000'
                - key: Generation X
                  from: "200000"
                  to: '315561600000'
                - key: Other
                  to: "200000"

  - match: { hits.total: 5 }

  - length: { aggregations.age_groups.buckets: 3 }

  - match: { aggregations.age_groups.buckets.0.key: "Other" }

  - match: { aggregations.age_groups.buckets.0.doc_count: 2 }

  - match: { aggregations.age_groups.buckets.1.key: "Generation X" }

  - match: { aggregations.age_groups.buckets.1.doc_count: 1 }

  - match: { aggregations.age_groups.buckets.2.key: "Generation Y" }

  - match: { aggregations.age_groups.buckets.2.doc_count: 2 }


---
"Date range unmapped with children":
  - skip:
      version: " - 7.9.99"
      reason: Fixed in 7.10.0

  - do:
      indices.create:
          index: test_a_unmapped
          body:
            settings:
              number_of_shards: 1
              number_of_replicas: 0
  - do:
      search:
        index: test_a_unmapped
        body:
          size: 0
          query:
            terms:
              animal: []
          aggs:
            date_range:
              date_range:
                field: date
                ranges:
                 - from: 2020-01-01T00:00:00Z
              aggs:
                sounds:
                  cardinality:
                    field: sound.keyword

  - match: { hits.total.value: 0 }
  - length: { aggregations.date_range.buckets: 1 }
  - match: { aggregations.date_range.buckets.0.doc_count: 0 }
  - match: { aggregations.date_range.buckets.0.key: "2020-01-01T00:00:00.000Z-*" }
  - is_false: aggregations.date_range.buckets.0.to
  - match: { aggregations.date_range.buckets.0.sounds.value: 0 }

---
"Unsigned long range":
  - skip:
      version: " - 2.7.99"
      reason: unsigned_long is not supported before 2.8.0

  - do:
      indices.put_mapping:
        index: test
        body:
          properties:
            unsigned:
              type: unsigned_long

  - do:
      index:
        index: test
        id: 1
        body: { "unsigned" : 42 }

  - do:
      index:
        index: test
        id: 2
        body: { "unsigned" : 100 }

  - do:
      index:
        index: test
        id: 3
        body: { "unsigned" : 50 }

  - do:
      indices.refresh: {}

  - do:
      search:
        rest_total_hits_as_int: true
        body: { "size" : 0, "aggs" : { "unsigned_long_range" : { "range" : { "field" : "unsigned", "ranges": [ { "to": 50 }, { "from": 50, "to": 150 }, { "from": 150 } ] } } } }

  - match: { hits.total: 3 }

  - length: { aggregations.unsigned_long_range.buckets: 3 }

  - match: { aggregations.unsigned_long_range.buckets.0.key: "*-50.0" }

  - is_false: aggregations.unsigned_long_range.buckets.0.from

  - match: { aggregations.unsigned_long_range.buckets.0.to: 50.0 }

  - match: { aggregations.unsigned_long_range.buckets.0.doc_count: 1 }

  - match: { aggregations.unsigned_long_range.buckets.1.key: "50.0-150.0" }

  - match: { aggregations.unsigned_long_range.buckets.1.from: 50.0 }

  - match: { aggregations.unsigned_long_range.buckets.1.to: 150.0 }

  - match: { aggregations.unsigned_long_range.buckets.1.doc_count: 2 }

  - match: { aggregations.unsigned_long_range.buckets.2.key: "150.0-*" }

  - match: { aggregations.unsigned_long_range.buckets.2.from: 150.0 }

  - is_false:  aggregations.unsigned_long_range.buckets.2.to

  - match: { aggregations.unsigned_long_range.buckets.2.doc_count: 0 }

  - do:
      search:
        rest_total_hits_as_int: true
        body: { "size" : 0, "aggs" : { "unsigned_long_range" : { "range" : { "field" : "unsigned", "ranges": [ { "from": null, "to": 50 }, { "from": 50, "to": 150 }, { "from": 150, "to": null } ] } } } }

  - match: { hits.total: 3 }

  - length: { aggregations.unsigned_long_range.buckets: 3 }

  - match: { aggregations.unsigned_long_range.buckets.0.key: "*-50.0" }

  - is_false: aggregations.unsigned_long_range.buckets.0.from

  - match: { aggregations.unsigned_long_range.buckets.0.to: 50.0 }

  - match: { aggregations.unsigned_long_range.buckets.0.doc_count: 1 }

  - match: { aggregations.unsigned_long_range.buckets.1.key: "50.0-150.0" }

  - match: { aggregations.unsigned_long_range.buckets.1.from: 50.0 }

  - match: { aggregations.unsigned_long_range.buckets.1.to: 150.0 }

  - match: { aggregations.unsigned_long_range.buckets.1.doc_count: 2 }

  - match: { aggregations.unsigned_long_range.buckets.2.key: "150.0-*" }

  - match: { aggregations.unsigned_long_range.buckets.2.from: 150.0 }

  - is_false:  aggregations.unsigned_long_range.buckets.2.to

  - match: { aggregations.unsigned_long_range.buckets.2.doc_count: 0 }

---
"Double range profiler shows filter rewrite info":
  - skip:
      version: " - 2.15.99"
      reason: debug info for filter rewrite was added in 2.16.0

  - do:
      indices.create:
        index: test_profile
        body:
          settings:
            number_of_replicas: 0
            number_of_shards: 1
            refresh_interval: -1
          mappings:
            properties:
              ip:
                type: ip
              double:
                type: double
              date:
                type: date
                format: epoch_second

  - do:
      bulk:
        index: test_profile
        refresh: true
        body:
          - '{"index": {}}'
          - '{"double" : 42}'
          - '{"index": {}}'
          - '{"double" : 100}'
          - '{"index": {}}'
          - '{"double" : 50}'

  - do:
      search:
        index: test_profile
        body:
          size: 0
          profile: true
          aggs:
            double_range:
              range:
                field: double
                ranges:
                  - to: 50
                  - from: 50
                    to: 150
                  - from: 150

  - length: { aggregations.double_range.buckets: 3 }

  - match: { aggregations.double_range.buckets.0.key: "*-50.0" }
  - is_false: aggregations.double_range.buckets.0.from
  - match: { aggregations.double_range.buckets.0.to: 50.0 }
  - match: { aggregations.double_range.buckets.0.doc_count: 1 }
  - match: { aggregations.double_range.buckets.1.key: "50.0-150.0" }
  - match: { aggregations.double_range.buckets.1.from: 50.0 }
  - match: { aggregations.double_range.buckets.1.to: 150.0 }
  - match: { aggregations.double_range.buckets.1.doc_count: 2 }
  - match: { aggregations.double_range.buckets.2.key: "150.0-*" }
  - match: { aggregations.double_range.buckets.2.from: 150.0 }
  - is_false:  aggregations.double_range.buckets.2.to
  - match: { aggregations.double_range.buckets.2.doc_count: 0 }

  - match: { profile.shards.0.aggregations.0.debug.optimized_segments: 1 }
  - match: { profile.shards.0.aggregations.0.debug.unoptimized_segments: 0 }
  - match: { profile.shards.0.aggregations.0.debug.leaf_visited: 1 }
  - match: { profile.shards.0.aggregations.0.debug.inner_visited: 0 }

---
"Scaled Float Range Aggregation":
  - do:
      index:
        index: test
        id: 1
        body: { "scaled_field": 1 }

  - do:
      index:
        index: test
        id: 2
        body: { "scaled_field": 1.53 }

  - do:
      index:
        index: test
        id: 3
        body: { "scaled_field": -2.1 }

  - do:
      index:
        index: test
        id: 4
        body: { "scaled_field": 1.53 }

  - do:
      indices.refresh: { }

  - do:
      search:
        index: test
        body:
          size: 0
          aggs:
            my_range:
              range:
                field: scaled_field
                ranges:
                  - to: 0
                  - from: 0
                    to: 1
                  - from: 1
                    to: 1.5
                  - from: 1.5

  - length: { aggregations.my_range.buckets: 4 }

  - match: { aggregations.my_range.buckets.0.key: "*-0.0" }
  - is_false: aggregations.my_range.buckets.0.from
  - match: { aggregations.my_range.buckets.0.to: 0.0 }
  - match: { aggregations.my_range.buckets.0.doc_count: 1 }
  - match: { aggregations.my_range.buckets.1.key: "0.0-1.0" }
  - match: { aggregations.my_range.buckets.1.from: 0.0 }
  - match: { aggregations.my_range.buckets.1.to: 1.0 }
  - match: { aggregations.my_range.buckets.1.doc_count: 0 }
  - match: { aggregations.my_range.buckets.2.key: "1.0-1.5" }
  - match: { aggregations.my_range.buckets.2.from: 1.0 }
  - match: { aggregations.my_range.buckets.2.to: 1.5 }
  - match: { aggregations.my_range.buckets.2.doc_count: 1 }
  - match: { aggregations.my_range.buckets.3.key: "1.5-*" }
  - match: { aggregations.my_range.buckets.3.from: 1.5 }
  - is_false:  aggregations.my_range.buckets.3.to
  - match: { aggregations.my_range.buckets.3.doc_count: 2 }

---
"Filter query w/ aggregation test":
  - skip:
      version: " - 2.99.99"
      reason: Backport fix to 2.16

  - do:
      bulk:
        refresh: true
        index: range-agg-w-query
        body:
          - '{"index": {}}'
          - '{"routing": "route1", "v": -10, "date": "2024-10-29"}'
          - '{"index": {}}'
          - '{"routing": "route1", "v": -5, "date": "2024-10-30"}'
          - '{"index": {}}'
          - '{"routing": "route1", "v": 10, "date": "2024-10-31"}'
          - '{"index": {}}'
          - '{"routing": "route2", "v": 15, "date": "2024-11-01"}'
          - '{"index": {}}'
          - '{"routing": "route2", "v": 20, "date": "2024-11-02"}'

  - do:
      search:
        index: range-agg-w-query
        body:
          query:
            bool:
              must:
                match_all: {}
              filter:
                - terms:
                    routing:
                      - "route1"
          aggregations:
            NegPosAgg:
              range:
                field: v
                keyed: true
                ranges:
                  - to: 0
                    key: "0"
                  - from: 0
                    key: "1"
          _source: false

  - match: { hits.total.value: 3 }
  - match: { aggregations.NegPosAgg.buckets.0.doc_count: 2 }
  - match: { aggregations.NegPosAgg.buckets.1.doc_count: 1 }

  - do:
      search:
        index: range-agg-w-query
        body:
          query:
            bool:
              must:
                match_all: {}
              filter:
                - terms:
                    routing:
                      - "route1"
          aggregations:
            HalloweenAgg:
              date_range:
                field: date
                format: "yyyy-MM-dd"
                keyed: true
                ranges:
                  - to: "2024-11-01"
                    key: "to-october"
                  - from: "2024-11-01"
                    key: "from-september"
          _source: false

  - match: { hits.total.value: 3 }
  - match: { aggregations.HalloweenAgg.buckets.to-october.doc_count: 3 }
  - match: { aggregations.HalloweenAgg.buckets.from-september.doc_count: 0 }
